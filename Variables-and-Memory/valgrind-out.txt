==8256== Memcheck, a memory error detector
==8256== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8256== Using Valgrind-3.16.0 and LibVEX; rerun with -h for copyright info
==8256== Command: ./a.out
==8256== Parent PID: 5522
==8256== 
==8256== 
==8256== HEAP SUMMARY:
==8256==     in use at exit: 80 bytes in 4 blocks
==8256==   total heap usage: 5 allocs, 1 frees, 72,784 bytes allocated
==8256== 
==8256== 16 bytes in 1 blocks are indirectly lost in loss record 1 of 4
==8256==    at 0x4C3052A: operator new(unsigned long) (vg_replace_malloc.c:342)
==8256==    by 0x108FE0: main (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256== 
==8256== 24 bytes in 1 blocks are indirectly lost in loss record 2 of 4
==8256==    at 0x4C3052A: operator new(unsigned long) (vg_replace_malloc.c:342)
==8256==    by 0x10952F: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<MyClass*>(MyClass*) (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256==    by 0x10949E: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<MyClass*>(MyClass*, std::integral_constant<bool, false>) (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256==    by 0x1093E1: std::__shared_ptr<MyClass, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<MyClass, void>(MyClass*) (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256==    by 0x109284: std::shared_ptr<MyClass>::shared_ptr<MyClass, void>(MyClass*) (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256==    by 0x108FD6: main (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256== 
==8256== 24 bytes in 1 blocks are indirectly lost in loss record 3 of 4
==8256==    at 0x4C3052A: operator new(unsigned long) (vg_replace_malloc.c:342)
==8256==    by 0x10952F: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<MyClass*>(MyClass*) (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256==    by 0x10949E: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<MyClass*>(MyClass*, std::integral_constant<bool, false>) (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256==    by 0x1093E1: std::__shared_ptr<MyClass, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<MyClass, void>(MyClass*) (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256==    by 0x109284: std::shared_ptr<MyClass>::shared_ptr<MyClass, void>(MyClass*) (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256==    by 0x108FFA: main (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256== 
==8256== 80 (16 direct, 64 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 4
==8256==    at 0x4C3052A: operator new(unsigned long) (vg_replace_malloc.c:342)
==8256==    by 0x108FBC: main (in /home/aplicacion/German/Repositorios/Cpp-Scratch/Variables-and-Memory/a.out)
==8256== 
==8256== LEAK SUMMARY:
==8256==    definitely lost: 16 bytes in 1 blocks
==8256==    indirectly lost: 64 bytes in 3 blocks
==8256==      possibly lost: 0 bytes in 0 blocks
==8256==    still reachable: 0 bytes in 0 blocks
==8256==         suppressed: 0 bytes in 0 blocks
==8256== 
==8256== For lists of detected and suppressed errors, rerun with: -s
==8256== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
